 public class Solution {
    public static int partition(int[] a, int l, int h) {
        int pi = a[l];
        int i = l + 1;
        int j = h;

        while (i <= j) {
            while (i <= j && a[i] <= pi) {
                i++;
            }
            while (i <= j && a[j] > pi) {
                j--;
            }
            if (i <= j) {
                swap(a, i, j);
            }
        }
        swap(a, l, j);
        return j;
    }

    public static void quickSort(int[] a, int l, int h) {
        if (l < h) {
            int pi = partition(a, l, h);
            quickSort(a, l, pi - 1);
            quickSort(a, pi + 1, h);
        }
    }

    public static void swap(int[] a, int f, int s) {
        int temp = a[f];
        a[f] = a[s];
        a[s] = temp;
    }

    public static void main(String[] args) {
        System.out.println("Required Array is: ");
        int[] array = {6, 3, 9, 5, 2, 8};
        int n = array.length;
        quickSort(array, 0, n - 1);

        for (int i = 0; i < array.length; i++) {
            System.out.print(array[i] + " ");
        }
    }
}
